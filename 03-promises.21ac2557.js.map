{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAE/B,OADAC,EAAAL,GAASM,OAAOC,KAAK,IACd,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFN,EAAAL,GAASM,OAAOS,QACd,uBAAqBZ,QAAiBC,OAIxCC,EAAAL,GAASM,OAAOU,QACd,sBAAoBb,QAAiBC,MAAU,GAGlDA,EAAM,G,CAjCQa,SAASC,cAAc,SAE/BC,iBAAiB,UAE9B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,eAChC,IAAIpB,EAAQqB,OAAOH,EAASI,IAAI,UAChC,MAAMC,EAAOF,OAAOH,EAASI,IAAI,SAC3BE,EAASH,OAAOH,EAASI,IAAI,WAEnC,IAAI,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC9B3B,EAAc2B,EAAGzB,GACjBA,GAASuB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst submitedForm = document.querySelector('.form');\n\nsubmitedForm.addEventListener('submit', onSubmitForm)\n\nfunction onSubmitForm(e){\n  e.preventDefault();\n  const formData = new FormData(e.currentTarget);\n  let delay = Number(formData.get('delay'));\n  const step = Number(formData.get('step'));\n  const amount = Number(formData.get('amount'));\n\n  for(let i = 0; i < amount; i += 1) {\n    createPromise(i, delay);\n    delay += step\n  }\n}\n\nfunction createPromise(position, delay) {\n  Notiflix.Notify.init({});\n  return new Promise((resolve, reject)=>{\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(()=>{\n      if (shouldResolve) {\n        // Fulfill\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      } else {\n        // Reject\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      }\n    }, delay);\n  })\n\n\n\n  \n  \n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","$parcel$interopDefault","Notify","init","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","success","failure","document","querySelector","addEventListener","e","preventDefault","formData","FormData","currentTarget","Number","get","step","amount","i"],"version":3,"file":"03-promises.21ac2557.js.map"}